#!/bin/bash
declare -A companies=(
    ["google"]="AS15169"
    ["amazon"]="AS14618"
    ["facebook"]="AS32934"
    ["apple"]="AS714"
    ["microsoft"]="AS8075"
    ["ibm"]="AS2140"
    ["alibaba"]="AS45102"
    ["tencent"]="AS45090"
)
blocklist=()
unblocklist=()
refresh="false"

function checkForTool {
    which $1 &> /dev/null
    if [[ $? -ne 0 ]];then
        echo "Required tool '$1' not found, please install it first"
        exit 1
    fi
}

function printUsage {
    echo "Horsemen of your altered future"
    echo
    echo "Block the four horsemen and other companies permanently using iptables"
    echo
    echo "Usage: hoyaf [-b name] [-u name] [-r] [-l] [-h]"
    echo
    echo "Options:"
    echo "  -b/--block <name>    block the ip ranges of a company by name or ASN"
    echo "  -u/--unblock <name>  unblock the ip ranges of a company by name or ASN"
    echo "  -r/--refresh         request the ip ranges again, even if they are cached"
    echo "  -l/--list            show a list of all companies and the blockage status"
    echo "  -h/--help            show this help page"
    echo
    echo "The name can be: 'all', a company name, or a custom ASN."
    echo "Both options can be repeated as many times as needed."
    echo "Companies that can be blocked by name using hoyaf:"
    echo ${!companies[@]}
    echo
    echo "Hoyaf uses whois, proxychains, tor and iptables to operate."
    echo "See https://github.com/Jelmerro/hoyaf for updates and details."
    exit
}

function unblockByASN {
    if [[ -z $2 ]];then
        echo "Unblocking $1"
    else
        echo "Unblocking $2 ($1)"
    fi
    file="/root/.cache/hoyaf/$1"
    if [[ -f $file ]];then
        count=0
        total=`wc -l < $file`
        echo "  Removing $total rules from iptables"
        while read line;do
            printf "\r  -> $count/$total    $line                           \r"
            iptables -w -C OUTPUT -d $line -j DROP 2> /dev/null
            if [[ $? == 0 ]];then
                iptables -w -D OUTPUT -d $line -j DROP
            fi
            count=$(($count + 1))
        done < $file
        printf "\r  Done                                                    \n"
    else
        echo "  Skipped, not currently blocked"
    fi
}

function blockByASN {
    mkdir -p /root/.cache/hoyaf/
    if [[ -z $2 ]];then
        echo "Blocking $1"
    else
        echo "Blocking $2 ($1)"
    fi
    file="/root/.cache/hoyaf/$1"
    if [[ ! -f $file || ! -s $file || $refresh == "true" ]];then
        echo "  Downloading ip ranges from whois.radb.net"
        proxychains whois -h whois.radb.net "!G$1" 2>/dev/null | grep -Eo "([0-9.]+){4}/[0-9]+" | aggregate 2> /dev/null > $file
    else
        echo "  Using cached ranges, specify '--refresh' to download them anyway"
    fi
    if [[ -s $file ]];then
        count=0
        total=`wc -l < $file`
        echo "  Adding $total rules to iptables"
        while read line;do
            printf "\r  -> $count/$total    $line                            \r"
            iptables -w -C OUTPUT -d $line -j DROP 2> /dev/null
            if [[ $? == 1 ]];then
                iptables -w -I OUTPUT -d $line -j DROP
            fi
            count=$(($count + 1))
        done < $file
        printf "\r  Done                                                    \n"
    else
        echo "  Failure, could not download ip ranges"
        rm $file
    fi
}

function listBlocked {
    if (( $(id -u) != 0 ));then
        echo "Hoyaf requires root access for reading iptables."
        exit 1
    fi
    cached=`dir /root/.cache/hoyaf/ 2> /dev/null`
    blocked=()
    for list in $cached;do
        iptables -C OUTPUT -d `head -n 1 /root/.cache/hoyaf/$list` -j DROP 2> /dev/null
        if [[ $? == 0 ]];then
            blocked+=($list)
        fi
    done
    if [[ -z $blocked ]];then
        echo "There are currently no companies blocked by hoyaf."
    else
        echo "Currenly blocked companies:"
        for asn in ${blocked[@]};do
            found=""
            for company in "${!companies[@]}";do
               if [[ "${companies[$company]}" == $asn ]];then
                   echo "$company ($asn) - `cat /root/.cache/hoyaf/$asn | wc -l` rules"
                   found="y"
               fi
            done
            if [[ -z $found ]];then
                echo "$asn - `cat /root/.cache/hoyaf/$asn | wc -l` rules"
            fi
        done
    fi
    exit
}

checkForTool iptables
checkForTool whois
checkForTool proxychains
checkForTool tor
checkForTool aggregate
while [ "$#" -gt 0 ];do
    case "$1" in
        -b) blocklist=("${blocklist[@]}" "$2");shift 2;;
        -u) unblocklist=("${unblocklist[@]}" "$2");shift 2;;
        --block) blocklist=("${blocklist[@]}" "$2");shift 2;;
        --unblock) unblocklist=("${unblocklist[@]}" "$2");shift 2;;
        -r) refresh="true";shift 1;;
        --refresh) refresh="true";shift 1;;
        -h) printUsage;;
        --help) printUsage;;
        -l) listBlocked;;
        --list) listBlocked;;
        *) echo "Unknown option: $1";echo "See -h for usage.";exit 1;
    esac
done
if [[ -z "${blocklist[@]}${unblocklist[@]}" ]];then
    printUsage
fi
if (( $(id -u) != 0 ));then
    echo "Hoyaf requires root access for modifying iptables."
    exit 1
fi
for block in "${blocklist[@]}" "${unblocklist[@]}";do
    if [[ -z "${companies[${block,,}]}" ]];then
        if [[ ${block^^} != AS* ]];then
            if [[ ${block,,} != all ]];then
                echo "$block is not a known company or valid ASN."
                echo "Companies that can be blocked by name using hoyaf:"
                echo ${!companies[@]}
                exit 1
            fi
        fi
    fi
done
for unblock in "${unblocklist[@]}"; do
    if [[ ${unblock,,} == all ]];then
        for company in "${!companies[@]}";do
            unblockByASN ${companies[$company]} $company
        done
    elif [[ ! -z "${companies[${unblock,,}]}" ]];then
        unblockByASN "${companies[${unblock,,}]}" $unblock
    else
        unblockByASN ${unblock^^}
    fi
done
for block in "${blocklist[@]}"; do
    if [[ ${block,,} == all ]];then
        for company in "${!companies[@]}";do
            blockByASN ${companies[$company]} $company
        done
    elif [[ ! -z "${companies[${block,,}]}" ]];then
        blockByASN "${companies[${block,,}]}" $block
    else
        blockByASN ${block^^}
    fi
done
iptables-save > /etc/sysconfig/iptables
